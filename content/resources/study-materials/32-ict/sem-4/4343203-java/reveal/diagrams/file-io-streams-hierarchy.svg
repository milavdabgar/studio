<svg viewBox="0 0 1200 800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title-text { font-family: Arial, sans-serif; font-size: 20px; font-weight: bold; fill: #2c3e50; }
      .section-title { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; fill: #ffffff; }
      .class-title { font-family: Arial, sans-serif; font-size: 11px; font-weight: bold; fill: #2c3e50; }
      .description-text { font-family: Arial, sans-serif; font-size: 10px; fill: #2c3e50; }
      .stream-box { stroke: #34495e; stroke-width: 2; rx: 5; }
      .abstract-box { stroke: #7f8c8d; stroke-width: 2; rx: 5; stroke-dasharray: 5,3; }
      .connection { stroke: #95a5a6; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .byte-color { fill: #3498db; }
      .char-color { fill: #e74c3c; }
      .filter-color { fill: #f39c12; }
      .data-color { fill: #9b59b6; }
      .file-color { fill: #27ae60; }
    </style>
    <marker id="arrowhead" markerWidth="8" markerHeight="8" refX="7" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#95a5a6"/>
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="600" y="30" text-anchor="middle" class="title-text">Java I/O Streams Hierarchy</text>
  
  <!-- Byte Streams Section -->
  <text x="300" y="70" text-anchor="middle" class="title-text" font-size="16" fill="#3498db">Byte Streams (8-bit)</text>
  
  <!-- InputStream (Abstract) -->
  <rect x="50" y="90" width="150" height="40" class="byte-color abstract-box"/>
  <text x="125" y="105" text-anchor="middle" class="section-title">InputStream</text>
  <text x="125" y="120" text-anchor="middle" class="description-text">(Abstract)</text>
  
  <!-- OutputStream (Abstract) -->
  <rect x="350" y="90" width="150" height="40" class="byte-color abstract-box"/>
  <text x="425" y="105" text-anchor="middle" class="section-title">OutputStream</text>
  <text x="425" y="120" text-anchor="middle" class="description-text">(Abstract)</text>
  
  <!-- InputStream Implementations -->
  <rect x="20" y="160" width="100" height="30" class="file-color stream-box"/>
  <text x="70" y="180" text-anchor="middle" class="class-title">FileInputStream</text>
  
  <rect x="130" y="160" width="100" height="30" class="data-color stream-box"/>
  <text x="180" y="180" text-anchor="middle" class="class-title">DataInputStream</text>
  
  <rect x="20" y="200" width="100" height="30" class="filter-color stream-box"/>
  <text x="70" y="220" text-anchor="middle" class="class-title">BufferedInputStream</text>
  
  <rect x="130" y="200" width="100" height="30" class="data-color stream-box"/>
  <text x="180" y="220" text-anchor="middle" class="class-title">ObjectInputStream</text>
  
  <!-- OutputStream Implementations -->
  <rect x="320" y="160" width="100" height="30" class="file-color stream-box"/>
  <text x="370" y="180" text-anchor="middle" class="class-title">FileOutputStream</text>
  
  <rect x="430" y="160" width="100" height="30" class="data-color stream-box"/>
  <text x="480" y="180" text-anchor="middle" class="class-title">DataOutputStream</text>
  
  <rect x="320" y="200" width="100" height="30" class="filter-color stream-box"/>
  <text x="370" y="220" text-anchor="middle" class="class-title">BufferedOutputStream</text>
  
  <rect x="430" y="200" width="100" height="30" class="data-color stream-box"/>
  <text x="480" y="220" text-anchor="middle" class="class-title">ObjectOutputStream</text>
  
  <!-- Character Streams Section -->
  <text x="850" y="70" text-anchor="middle" class="title-text" font-size="16" fill="#e74c3c">Character Streams (16-bit Unicode)</text>
  
  <!-- Reader (Abstract) -->
  <rect x="650" y="90" width="150" height="40" class="char-color abstract-box"/>
  <text x="725" y="105" text-anchor="middle" class="section-title">Reader</text>
  <text x="725" y="120" text-anchor="middle" class="description-text">(Abstract)</text>
  
  <!-- Writer (Abstract) -->
  <rect x="950" y="90" width="150" height="40" class="char-color abstract-box"/>
  <text x="1025" y="105" text-anchor="middle" class="section-title">Writer</text>
  <text x="1025" y="120" text-anchor="middle" class="description-text">(Abstract)</text>
  
  <!-- Reader Implementations -->
  <rect x="620" y="160" width="100" height="30" class="file-color stream-box"/>
  <text x="670" y="180" text-anchor="middle" class="class-title">FileReader</text>
  
  <rect x="730" y="160" width="100" height="30" class="filter-color stream-box"/>
  <text x="780" y="180" text-anchor="middle" class="class-title">BufferedReader</text>
  
  <rect x="620" y="200" width="100" height="30" class="data-color stream-box"/>
  <text x="670" y="220" text-anchor="middle" class="class-title">InputStreamReader</text>
  
  <rect x="730" y="200" width="100" height="30" class="data-color stream-box"/>
  <text x="780" y="220" text-anchor="middle" class="class-title">StringReader</text>
  
  <!-- Writer Implementations -->
  <rect x="920" y="160" width="100" height="30" class="file-color stream-box"/>
  <text x="970" y="180" text-anchor="middle" class="class-title">FileWriter</text>
  
  <rect x="1030" y="160" width="100" height="30" class="filter-color stream-box"/>
  <text x="1080" y="180" text-anchor="middle" class="class-title">BufferedWriter</text>
  
  <rect x="920" y="200" width="100" height="30" class="data-color stream-box"/>
  <text x="970" y="220" text-anchor="middle" class="class-title">OutputStreamWriter</text>
  
  <rect x="1030" y="200" width="100" height="30" class="data-color stream-box"/>
  <text x="1080" y="220" text-anchor="middle" class="class-title">StringWriter</text>
  
  <!-- Connection Lines -->
  <line x1="125" y1="130" x2="70" y2="160" class="connection"/>
  <line x1="125" y1="130" x2="180" y2="160" class="connection"/>
  <line x1="125" y1="130" x2="70" y2="200" class="connection"/>
  <line x1="125" y1="130" x2="180" y2="200" class="connection"/>
  
  <line x1="425" y1="130" x2="370" y2="160" class="connection"/>
  <line x1="425" y1="130" x2="480" y2="160" class="connection"/>
  <line x1="425" y1="130" x2="370" y2="200" class="connection"/>
  <line x1="425" y1="130" x2="480" y2="200" class="connection"/>
  
  <line x1="725" y1="130" x2="670" y2="160" class="connection"/>
  <line x1="725" y1="130" x2="780" y2="160" class="connection"/>
  <line x1="725" y1="130" x2="670" y2="200" class="connection"/>
  <line x1="725" y1="130" x2="780" y2="200" class="connection"/>
  
  <line x1="1025" y1="130" x2="970" y2="160" class="connection"/>
  <line x1="1025" y1="130" x2="1080" y2="160" class="connection"/>
  <line x1="1025" y1="130" x2="970" y2="200" class="connection"/>
  <line x1="1025" y1="130" x2="1080" y2="200" class="connection"/>
  
  <!-- Stream Usage Examples -->
  <rect x="50" y="280" width="1100" height="300" fill="#f8f9fa" stroke="#dee2e6" stroke-width="2" rx="10"/>
  <text x="600" y="305" text-anchor="middle" class="title-text" font-size="16">Stream Usage Examples & Best Practices</text>
  
  <!-- Byte Stream Example -->
  <rect x="70" y="320" width="520" height="120" fill="#e8f4f8" stroke="#3498db" stroke-width="2" rx="5"/>
  <text x="330" y="340" text-anchor="middle" class="class-title" font-size="12" fill="#3498db">Byte Stream Example - File Copy</text>
  
  <text x="80" y="360" class="description-text" font-family="Courier New" font-size="9">// Reading and writing binary data</text>
  <text x="80" y="375" class="description-text" font-family="Courier New" font-size="9">try (FileInputStream fis = new FileInputStream("input.jpg");</text>
  <text x="80" y="390" class="description-text" font-family="Courier New" font-size="9">     FileOutputStream fos = new FileOutputStream("output.jpg")) {</text>
  <text x="80" y="405" class="description-text" font-family="Courier New" font-size="9">    </text>
  <text x="80" y="420" class="description-text" font-family="Courier New" font-size="9">    byte[] buffer = new byte[1024];</text>
  <text x="80" y="435" class="description-text" font-family="Courier New" font-size="9">    int bytesRead;</text>
  <text x="320" y="375" class="description-text" font-family="Courier New" font-size="9">    while ((bytesRead = fis.read(buffer)) != -1) {</text>
  <text x="320" y="390" class="description-text" font-family="Courier New" font-size="9">        fos.write(buffer, 0, bytesRead);</text>
  <text x="320" y="405" class="description-text" font-family="Courier New" font-size="9">    }</text>
  <text x="320" y="420" class="description-text" font-family="Courier New" font-size="9">} catch (IOException e) {</text>
  <text x="320" y="435" class="description-text" font-family="Courier New" font-size="9">    e.printStackTrace();</text>
  <text x="80" y="450" class="description-text" font-family="Courier New" font-size="9">}</text>
  
  <!-- Character Stream Example -->
  <rect x="610" y="320" width="520" height="120" fill="#fdf2f2" stroke="#e74c3c" stroke-width="2" rx="5"/>
  <text x="870" y="340" text-anchor="middle" class="class-title" font-size="12" fill="#e74c3c">Character Stream Example - Text Processing</text>
  
  <text x="620" y="360" class="description-text" font-family="Courier New" font-size="9">// Reading and writing text data</text>
  <text x="620" y="375" class="description-text" font-family="Courier New" font-size="9">try (BufferedReader reader = new BufferedReader(</text>
  <text x="620" y="390" class="description-text" font-family="Courier New" font-size="9">         new FileReader("input.txt"));</text>
  <text x="620" y="405" class="description-text" font-family="Courier New" font-size="9">     BufferedWriter writer = new BufferedWriter(</text>
  <text x="620" y="420" class="description-text" font-family="Courier New" font-size="9">         new FileWriter("output.txt"))) {</text>
  <text x="620" y="435" class="description-text" font-family="Courier New" font-size="9">    </text>
  <text x="860" y="375" class="description-text" font-family="Courier New" font-size="9">    String line;</text>
  <text x="860" y="390" class="description-text" font-family="Courier New" font-size="9">    while ((line = reader.readLine()) != null) {</text>
  <text x="860" y="405" class="description-text" font-family="Courier New" font-size="9">        writer.write(line.toUpperCase());</text>
  <text x="860" y="420" class="description-text" font-family="Courier New" font-size="9">        writer.newLine();</text>
  <text x="860" y="435" class="description-text" font-family="Courier New" font-size="9">    }</text>
  <text x="620" y="450" class="description-text" font-family="Courier New" font-size="9">}</text>
  
  <!-- Stream Comparison -->
  <rect x="70" y="460" width="1060" height="110" fill="#ffffff" stroke="#bdc3c7" stroke-width="1" rx="5"/>
  <text x="600" y="480" text-anchor="middle" class="class-title" font-size="14">Stream Type Comparison</text>
  
  <!-- Comparison Table -->
  <text x="80" y="500" class="description-text" font-weight="bold">Aspect</text>
  <text x="200" y="500" class="description-text" font-weight="bold" fill="#3498db">Byte Streams</text>
  <text x="400" y="500" class="description-text" font-weight="bold" fill="#e74c3c">Character Streams</text>
  <text x="650" y="500" class="description-text" font-weight="bold">Best Use Case</text>
  
  <text x="80" y="520" class="description-text">Data Unit</text>
  <text x="200" y="520" class="description-text">8-bit bytes</text>
  <text x="400" y="520" class="description-text">16-bit Unicode characters</text>
  <text x="650" y="520" class="description-text">Binary files vs Text files</text>
  
  <text x="80" y="535" class="description-text">Encoding</text>
  <text x="200" y="535" class="description-text">No automatic encoding</text>
  <text x="400" y="535" class="description-text">Automatic character encoding</text>
  <text x="650" y="535" class="description-text">Images, executables vs Documents</text>
  
  <text x="80" y="550" class="description-text">Performance</text>
  <text x="200" y="550" class="description-text">Faster for binary data</text>
  <text x="400" y="550" class="description-text">Optimized for text processing</text>
  <text x="650" y="550" class="description-text">Raw speed vs Text convenience</text>
  
  <!-- Legend -->
  <rect x="900" y="460" width="230" height="110" fill="#f8f9fa" stroke="#dee2e6" stroke-width="1" rx="5"/>
  <text x="1015" y="480" text-anchor="middle" class="class-title" font-size="12">Legend</text>
  
  <rect x="910" y="490" width="15" height="10" class="file-color"/>
  <text x="930" y="500" class="description-text">File I/O Classes</text>
  
  <rect x="910" y="505" width="15" height="10" class="filter-color"/>
  <text x="930" y="515" class="description-text">Filter/Buffer Classes</text>
  
  <rect x="910" y="520" width="15" height="10" class="data-color"/>
  <text x="930" y="530" class="description-text">Data Processing Classes</text>
  
  <rect x="910" y="535" width="15" height="10" fill="none" class="abstract-box"/>
  <text x="930" y="545" class="description-text">Abstract Classes</text>
  
  <text x="910" y="565" class="description-text" font-size="9">Use try-with-resources for automatic</text>
  <text x="910" y="575" class="description-text" font-size="9">resource management!</text>
</svg>