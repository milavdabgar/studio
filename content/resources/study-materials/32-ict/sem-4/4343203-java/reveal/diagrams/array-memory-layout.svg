<svg viewBox="0 0 1100 750" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title-text { font-family: Arial, sans-serif; font-size: 20px; font-weight: bold; fill: #2c3e50; }
      .section-title { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; fill: #ffffff; }
      .label-text { font-family: Arial, sans-serif; font-size: 12px; font-weight: bold; fill: #2c3e50; }
      .index-text { font-family: Arial, sans-serif; font-size: 10px; fill: #7f8c8d; }
      .value-text { font-family: Arial, sans-serif; font-size: 12px; fill: #2c3e50; font-weight: bold; }
      .address-text { font-family: 'Courier New', monospace; font-size: 9px; fill: #7f8c8d; }
      .code-text { font-family: 'Courier New', monospace; font-size: 11px; fill: #2c3e50; }
      .memory-cell { stroke: #34495e; stroke-width: 2; rx: 3; }
      .array-box { stroke: #3498db; stroke-width: 3; rx: 5; }
      .pointer-arrow { stroke: #e74c3c; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="8" markerHeight="8" refX="7" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#e74c3c"/>
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="550" y="30" text-anchor="middle" class="title-text">Java Array Memory Layout & Structure</text>
  
  <!-- 1D Array Section -->
  <text x="300" y="70" text-anchor="middle" class="label-text" font-size="16" fill="#3498db">One-Dimensional Array</text>
  
  <!-- Array Declaration -->
  <rect x="50" y="90" width="500" height="30" fill="#e8f4f8" stroke="#3498db" stroke-width="2" rx="5"/>
  <text x="300" y="110" text-anchor="middle" class="code-text">int[] numbers = {10, 20, 30, 40, 50};</text>
  
  <!-- Memory Layout -->
  <rect x="50" y="140" width="500" height="120" fill="#f8f9fa" class="array-box"/>
  <text x="300" y="165" text-anchor="middle" class="label-text">Memory Layout (Contiguous Allocation)</text>
  
  <!-- Array Elements -->
  <rect x="80" y="180" width="60" height="40" fill="#3498db" class="memory-cell"/>
  <text x="110" y="205" text-anchor="middle" class="value-text" fill="white">10</text>
  <text x="110" y="175" text-anchor="middle" class="index-text">Index 0</text>
  <text x="110" y="235" text-anchor="middle" class="address-text">0x1000</text>
  
  <rect x="150" y="180" width="60" height="40" fill="#3498db" class="memory-cell"/>
  <text x="180" y="205" text-anchor="middle" class="value-text" fill="white">20</text>
  <text x="180" y="175" text-anchor="middle" class="index-text">Index 1</text>
  <text x="180" y="235" text-anchor="middle" class="address-text">0x1004</text>
  
  <rect x="220" y="180" width="60" height="40" fill="#3498db" class="memory-cell"/>
  <text x="250" y="205" text-anchor="middle" class="value-text" fill="white">30</text>
  <text x="250" y="175" text-anchor="middle" class="index-text">Index 2</text>
  <text x="250" y="235" text-anchor="middle" class="address-text">0x1008</text>
  
  <rect x="290" y="180" width="60" height="40" fill="#3498db" class="memory-cell"/>
  <text x="320" y="205" text-anchor="middle" class="value-text" fill="white">40</text>
  <text x="320" y="175" text-anchor="middle" class="index-text">Index 3</text>
  <text x="320" y="235" text-anchor="middle" class="address-text">0x100C</text>
  
  <rect x="360" y="180" width="60" height="40" fill="#3498db" class="memory-cell"/>
  <text x="390" y="205" text-anchor="middle" class="value-text" fill="white">50</text>
  <text x="390" y="175" text-anchor="middle" class="index-text">Index 4</text>
  <text x="390" y="235" text-anchor="middle" class="address-text">0x1010</text>
  
  <!-- Array Reference -->
  <rect x="480" y="180" width="60" height="40" fill="#e74c3c" class="memory-cell"/>
  <text x="510" y="200" text-anchor="middle" class="value-text" fill="white">numbers</text>
  <text x="510" y="210" text-anchor="middle" class="value-text" fill="white" font-size="10">reference</text>
  <text x="510" y="175" text-anchor="middle" class="index-text">Variable</text>
  <text x="510" y="235" text-anchor="middle" class="address-text">0x2000</text>
  
  <!-- Pointer Arrow -->
  <line x1="480" y1="200" x2="430" y2="200" class="pointer-arrow"/>
  <text x="455" y="190" text-anchor="middle" class="index-text" fill="#e74c3c">points to</text>
  
  <!-- 2D Array Section -->
  <text x="750" y="70" text-anchor="middle" class="label-text" font-size="16" fill="#e67e22">Two-Dimensional Array</text>
  
  <!-- 2D Array Declaration -->
  <rect x="600" y="90" width="300" height="30" fill="#fff3e0" stroke="#e67e22" stroke-width="2" rx="5"/>
  <text x="750" y="110" text-anchor="middle" class="code-text">int[][] matrix = {{1,2}, {3,4}, {5,6}};</text>
  
  <!-- 2D Array Memory Layout -->
  <rect x="600" y="140" width="450" height="120" fill="#f8f9fa" stroke="#e67e22" stroke-width="3" rx="5"/>
  <text x="825" y="165" text-anchor="middle" class="label-text">Memory Layout (Array of Arrays)</text>
  
  <!-- Main Array (Array of References) -->
  <rect x="620" y="180" width="50" height="30" fill="#e67e22" class="memory-cell"/>
  <text x="645" y="200" text-anchor="middle" class="value-text" fill="white" font-size="10">Ref0</text>
  <text x="645" y="175" text-anchor="middle" class="index-text">matrix[0]</text>
  
  <rect x="680" y="180" width="50" height="30" fill="#e67e22" class="memory-cell"/>
  <text x="705" y="200" text-anchor="middle" class="value-text" fill="white" font-size="10">Ref1</text>
  <text x="705" y="175" text-anchor="middle" class="index-text">matrix[1]</text>
  
  <rect x="740" y="180" width="50" height="30" fill="#e67e22" class="memory-cell"/>
  <text x="765" y="200" text-anchor="middle" class="value-text" fill="white" font-size="10">Ref2</text>
  <text x="765" y="175" text-anchor="middle" class="index-text">matrix[2]</text>
  
  <!-- Sub-arrays -->
  <rect x="820" y="170" width="30" height="25" fill="#f39c12" class="memory-cell"/>
  <text x="835" y="187" text-anchor="middle" class="value-text" font-size="10">1</text>
  <rect x="855" y="170" width="30" height="25" fill="#f39c12" class="memory-cell"/>
  <text x="870" y="187" text-anchor="middle" class="value-text" font-size="10">2</text>
  
  <rect x="820" y="200" width="30" height="25" fill="#f39c12" class="memory-cell"/>
  <text x="835" y="217" text-anchor="middle" class="value-text" font-size="10">3</text>
  <rect x="855" y="200" width="30" height="25" fill="#f39c12" class="memory-cell"/>
  <text x="870" y="217" text-anchor="middle" class="value-text" font-size="10">4</text>
  
  <rect x="820" y="230" width="30" height="25" fill="#f39c12" class="memory-cell"/>
  <text x="835" y="247" text-anchor="middle" class="value-text" font-size="10">5</text>
  <rect x="855" y="230" width="30" height="25" fill="#f39c12" class="memory-cell"/>
  <text x="870" y="247" text-anchor="middle" class="value-text" font-size="10">6</text>
  
  <!-- Reference Arrows -->
  <line x1="670" y1="195" x2="810" y2="182" class="pointer-arrow"/>
  <line x1="730" y1="195" x2="810" y2="212" class="pointer-arrow"/>
  <line x1="790" y1="195" x2="810" y2="242" class="pointer-arrow"/>
  
  <!-- Array Properties Section -->
  <rect x="50" y="290" width="1000" height="180" fill="#f8f9fa" stroke="#dee2e6" stroke-width="2" rx="10"/>
  <text x="550" y="315" text-anchor="middle" class="label-text" font-size="16">Array Properties & Characteristics</text>
  
  <!-- Properties Table -->
  <rect x="70" y="330" width="460" height="130" fill="#ffffff" stroke="#bdc3c7" stroke-width="1" rx="5"/>
  <text x="300" y="350" text-anchor="middle" class="label-text" font-size="12">Array Characteristics</text>
  
  <text x="80" y="375" class="code-text" font-weight="bold">Property</text>
  <text x="250" y="375" class="code-text" font-weight="bold">Description</text>
  
  <text x="80" y="395" class="code-text">Fixed Size</text>
  <text x="250" y="395" class="code-text">Size determined at creation time</text>
  
  <text x="80" y="410" class="code-text">Contiguous Memory</text>
  <text x="250" y="410" class="code-text">Elements stored in adjacent memory locations</text>
  
  <text x="80" y="425" class="code-text">Zero-indexed</text>
  <text x="250" y="425" class="code-text">First element at index 0</text>
  
  <text x="80" y="440" class="code-text">Homogeneous</text>
  <text x="250" y="440" class="code-text">All elements of same type</text>
  
  <text x="80" y="455" class="code-text">Reference Type</text>
  <text x="250" y="455" class="code-text">Array variable stores reference to memory</text>
  
  <!-- Memory Access Explanation -->
  <rect x="570" y="330" width="460" height="130" fill="#ffffff" stroke="#bdc3c7" stroke-width="1" rx="5"/>
  <text x="800" y="350" text-anchor="middle" class="label-text" font-size="12">Memory Access Calculation</text>
  
  <text x="580" y="375" class="code-text" font-weight="bold">Formula: Address = Base + (Index × Element_Size)</text>
  <text x="580" y="395" class="code-text">Example: numbers[2]</text>
  <text x="580" y="410" class="code-text">Base Address = 0x1000</text>
  <text x="580" y="425" class="code-text">Index = 2, Element Size = 4 bytes (int)</text>
  <text x="580" y="440" class="code-text">Address = 0x1000 + (2 × 4) = 0x1008</text>
  <text x="580" y="455" class="code-text" font-weight="bold" fill="#27ae60">Time Complexity: O(1) - Constant Time</text>
  
  <!-- Code Examples -->
  <rect x="50" y="490" width="1000" height="240" fill="#f8f9fa" stroke="#dee2e6" stroke-width="2" rx="10"/>
  <text x="550" y="515" text-anchor="middle" class="label-text" font-size="16">Array Operations Examples</text>
  
  <!-- 1D Array Operations -->
  <rect x="70" y="530" width="450" height="180" fill="#e8f4f8" stroke="#3498db" stroke-width="2" rx="5"/>
  <text x="295" y="550" text-anchor="middle" class="label-text" font-size="12" fill="#3498db">1D Array Operations</text>
  
  <text x="80" y="570" class="code-text">// Array creation and initialization</text>
  <text x="80" y="585" class="code-text">int[] arr = new int[5];           // Default values: 0</text>
  <text x="80" y="600" class="code-text">int[] nums = {1, 2, 3, 4, 5};    // Direct initialization</text>
  <text x="80" y="615" class="code-text"></text>
  <text x="80" y="630" class="code-text">// Access and modification</text>
  <text x="80" y="645" class="code-text">arr[0] = 10;                      // Set first element</text>
  <text x="80" y="660" class="code-text">int value = arr[2];               // Get third element</text>
  <text x="80" y="675" class="code-text">int length = arr.length;          // Get array size</text>
  <text x="80" y="690" class="code-text"></text>
  <text x="80" y="705" class="code-text">// Array traversal</text>
  <text x="80" y="720" class="code-text">for (int i = 0; i < arr.length; i++) {</text>
  <text x="80" y="735" class="code-text">    System.out.println(arr[i]);</text>
  <text x="80" y="750" class="code-text">}</text>
  
  <!-- 2D Array Operations -->
  <rect x="570" y="530" width="460" height="180" fill="#fff3e0" stroke="#e67e22" stroke-width="2" rx="5"/>
  <text x="800" y="550" text-anchor="middle" class="label-text" font-size="12" fill="#e67e22">2D Array Operations</text>
  
  <text x="580" y="570" class="code-text">// 2D Array creation</text>
  <text x="580" y="585" class="code-text">int[][] matrix = new int[3][4];   // 3 rows, 4 columns</text>
  <text x="580" y="600" class="code-text">int[][] mat = {{1,2}, {3,4}};    // Direct initialization</text>
  <text x="580" y="615" class="code-text"></text>
  <text x="580" y="630" class="code-text">// Access and modification</text>
  <text x="580" y="645" class="code-text">matrix[0][1] = 5;                 // Set element at row 0, col 1</text>
  <text x="580" y="660" class="code-text">int val = matrix[1][2];           // Get element at row 1, col 2</text>
  <text x="580" y="675" class="code-text">int rows = matrix.length;         // Number of rows</text>
  <text x="580" y="690" class="code-text">int cols = matrix[0].length;      // Number of columns</text>
  <text x="580" y="705" class="code-text"></text>
  <text x="580" y="720" class="code-text">// 2D Array traversal</text>
  <text x="580" y="735" class="code-text">for (int i = 0; i < matrix.length; i++) {</text>
  <text x="580" y="750" class="code-text">    for (int j = 0; j < matrix[i].length; j++) {</text>
  <text x="600" y="765" class="code-text">System.out.print(matrix[i][j] + " ");</text>
  <text x="580" y="780" class="code-text">    }</text>
  <text x="580" y="795" class="code-text">}</text>
</svg>