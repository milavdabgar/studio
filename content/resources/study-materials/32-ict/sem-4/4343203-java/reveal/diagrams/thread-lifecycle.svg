<svg viewBox="0 0 1000 700" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="newGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4CAF50;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#2E7D32;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="runnableGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#2196F3;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#1565C0;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="blockedGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#FF9800;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#E65100;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="waitingGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#9C27B0;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#4A148C;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="terminatedGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#F44336;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#C62828;stop-opacity:1" />
    </linearGradient>
    <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#333"/>
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="500" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#333">Java Thread Lifecycle and States</text>
  
  <!-- NEW State -->
  <g id="new-state">
    <rect x="50" y="80" width="120" height="80" rx="10" fill="url(#newGrad)" stroke="#2E7D32" stroke-width="3"/>
    <text x="110" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">NEW</text>
    <text x="110" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">Thread created</text>
    <text x="110" y="145" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">not started</text>
    
    <!-- Code example -->
    <rect x="30" y="180" width="160" height="40" rx="5" fill="#E8F5E8" stroke="#4CAF50" stroke-width="1"/>
    <text x="110" y="200" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#2E7D32">Thread t = new Thread();</text>
    <text x="110" y="215" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#2E7D32">State: NEW</text>
  </g>
  
  <!-- RUNNABLE State -->
  <g id="runnable-state">
    <rect x="300" y="80" width="120" height="80" rx="10" fill="url(#runnableGrad)" stroke="#1565C0" stroke-width="3"/>
    <text x="360" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">RUNNABLE</text>
    <text x="360" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">Executing or</text>
    <text x="360" y="145" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">ready to execute</text>
    
    <!-- Code example -->
    <rect x="280" y="180" width="160" height="40" rx="5" fill="#E3F2FD" stroke="#2196F3" stroke-width="1"/>
    <text x="360" y="200" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#1565C0">t.start();</text>
    <text x="360" y="215" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#1565C0">State: RUNNABLE</text>
  </g>
  
  <!-- TERMINATED State -->
  <g id="terminated-state">
    <rect x="830" y="80" width="120" height="80" rx="10" fill="url(#terminatedGrad)" stroke="#C62828" stroke-width="3"/>
    <text x="890" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">TERMINATED</text>
    <text x="890" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">Execution</text>
    <text x="890" y="145" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">completed</text>
    
    <!-- Code example -->
    <rect x="810" y="180" width="160" height="40" rx="5" fill="#FFEBEE" stroke="#F44336" stroke-width="1"/>
    <text x="890" y="200" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#C62828">run() method finished</text>
    <text x="890" y="215" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#C62828">State: TERMINATED</text>
  </g>
  
  <!-- BLOCKED State -->
  <g id="blocked-state">
    <rect x="200" y="300" width="140" height="80" rx="10" fill="url(#blockedGrad)" stroke="#E65100" stroke-width="3"/>
    <text x="270" y="330" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">BLOCKED</text>
    <text x="270" y="350" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">Waiting for</text>
    <text x="270" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">monitor lock</text>
    
    <!-- Code example -->
    <rect x="180" y="400" width="180" height="60" rx="5" fill="#FFF3E0" stroke="#FF9800" stroke-width="1"/>
    <text x="270" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#E65100">synchronized(obj) {</text>
    <text x="270" y="435" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#E65100">// Another thread holds lock</text>
    <text x="270" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#E65100">}</text>
  </g>
  
  <!-- WAITING State -->
  <g id="waiting-state">
    <rect x="400" y="300" width="140" height="80" rx="10" fill="url(#waitingGrad)" stroke="#4A148C" stroke-width="3"/>
    <text x="470" y="330" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">WAITING</text>
    <text x="470" y="350" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">Waiting indefinitely</text>
    <text x="470" y="365" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">for another thread</text>
    
    <!-- Code example -->
    <rect x="380" y="400" width="180" height="60" rx="5" fill="#F3E5F5" stroke="#9C27B0" stroke-width="1"/>
    <text x="470" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#4A148C">obj.wait();</text>
    <text x="470" y="435" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4A148C">thread.join();</text>
    <text x="470" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4A148C">State: WAITING</text>
  </g>
  
  <!-- TIMED_WAITING State -->
  <g id="timed-waiting-state">
    <rect x="600" y="300" width="140" height="80" rx="10" fill="url(#waitingGrad)" stroke="#4A148C" stroke-width="3"/>
    <text x="670" y="325" text-anchor="middle" font-family="Arial, sans-serif" font-size="13" font-weight="bold" fill="white">TIMED_WAITING</text>
    <text x="670" y="345" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">Waiting for</text>
    <text x="670" y="360" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">specified time</text>
    
    <!-- Code example -->
    <rect x="580" y="400" width="180" height="60" rx="5" fill="#F3E5F5" stroke="#9C27B0" stroke-width="1"/>
    <text x="670" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#4A148C">Thread.sleep(1000);</text>
    <text x="670" y="435" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4A148C">obj.wait(timeout);</text>
    <text x="670" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#4A148C">State: TIMED_WAITING</text>
  </g>
  
  <!-- State Transitions -->
  <!-- NEW to RUNNABLE -->
  <line x1="170" y1="120" x2="300" y2="120" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="235" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#333">start()</text>
  
  <!-- RUNNABLE to TERMINATED -->
  <line x1="420" y1="120" x2="830" y2="120" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="625" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#333">run() completes</text>
  
  <!-- RUNNABLE to BLOCKED -->
  <line x1="340" y1="160" x2="280" y2="300" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="285" y="230" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#333" transform="rotate(-45 285 230)">sync block</text>
  
  <!-- BLOCKED to RUNNABLE -->
  <line x1="260" y1="300" x2="320" y2="160" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="270" y="250" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#333" transform="rotate(45 270 250)">lock acquired</text>
  
  <!-- RUNNABLE to WAITING -->
  <line x1="380" y1="160" x2="450" y2="300" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="400" y="230" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#333" transform="rotate(-25 400 230)">wait()</text>
  
  <!-- WAITING to RUNNABLE -->
  <line x1="430" y1="300" x2="380" y2="160" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="420" y="250" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#333" transform="rotate(25 420 250)">notify()</text>
  
  <!-- RUNNABLE to TIMED_WAITING -->
  <line x1="400" y1="160" x2="650" y2="300" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="520" y="230" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#333" transform="rotate(-25 520 230)">sleep()</text>
  
  <!-- TIMED_WAITING to RUNNABLE -->
  <line x1="630" y1="300" x2="400" y2="160" stroke="#333" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="530" y="250" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#333" transform="rotate(25 530 250)">timeout/interrupt</text>
  
  <!-- Thread Methods -->
  <rect x="50" y="500" width="900" height="180" rx="10" fill="#F5F5F5" stroke="#757575" stroke-width="2"/>
  <text x="500" y="525" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#333">Common Thread Methods</text>
  
  <!-- Method Categories -->
  <text x="80" y="550" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#2E7D32">Creation &amp; Control</text>
  <text x="80" y="570" font-family="Arial, sans-serif" font-size="11" fill="#333">• start() - Begin execution</text>
  <text x="80" y="585" font-family="Arial, sans-serif" font-size="11" fill="#333">• run() - Thread's main logic</text>
  <text x="80" y="600" font-family="Arial, sans-serif" font-size="11" fill="#333">• interrupt() - Send interrupt signal</text>
  <text x="80" y="615" font-family="Arial, sans-serif" font-size="11" fill="#333">• join() - Wait for completion</text>
  <text x="80" y="630" font-family="Arial, sans-serif" font-size="11" fill="#333">• join(timeout) - Wait with timeout</text>
  <text x="80" y="645" font-family="Arial, sans-serif" font-size="11" fill="#333">• setDaemon(boolean) - Daemon thread</text>
  <text x="80" y="660" font-family="Arial, sans-serif" font-size="11" fill="#333">• setPriority(int) - Thread priority</text>
  
  <text x="320" y="550" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1565C0">State &amp; Information</text>
  <text x="320" y="570" font-family="Arial, sans-serif" font-size="11" fill="#333">• getState() - Current thread state</text>
  <text x="320" y="585" font-family="Arial, sans-serif" font-size="11" fill="#333">• isAlive() - Check if thread is alive</text>
  <text x="320" y="600" font-family="Arial, sans-serif" font-size="11" fill="#333">• getName() - Get thread name</text>
  <text x="320" y="615" font-family="Arial, sans-serif" font-size="11" fill="#333">• setName(String) - Set thread name</text>
  <text x="320" y="630" font-family="Arial, sans-serif" font-size="11" fill="#333">• getId() - Get unique thread ID</text>
  <text x="320" y="645" font-family="Arial, sans-serif" font-size="11" fill="#333">• getPriority() - Get thread priority</text>
  <text x="320" y="660" font-family="Arial, sans-serif" font-size="11" fill="#333">• isDaemon() - Check daemon status</text>
  
  <text x="560" y="550" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#E65100">Static Methods</text>
  <text x="560" y="570" font-family="Arial, sans-serif" font-size="11" fill="#333">• Thread.currentThread() - Current thread</text>
  <text x="560" y="585" font-family="Arial, sans-serif" font-size="11" fill="#333">• Thread.sleep(ms) - Pause execution</text>
  <text x="560" y="600" font-family="Arial, sans-serif" font-size="11" fill="#333">• Thread.yield() - Hint to scheduler</text>
  <text x="560" y="615" font-family="Arial, sans-serif" font-size="11" fill="#333">• Thread.interrupted() - Check interrupt</text>
  <text x="560" y="630" font-family="Arial, sans-serif" font-size="11" fill="#333">• Thread.activeCount() - Active threads</text>
  <text x="560" y="645" font-family="Arial, sans-serif" font-size="11" fill="#333">• Thread.holdsLock(obj) - Check lock</text>
  
  <text x="760" y="550" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#9C27B0">Synchronization</text>
  <text x="760" y="570" font-family="Arial, sans-serif" font-size="11" fill="#333">• synchronized blocks/methods</text>
  <text x="760" y="585" font-family="Arial, sans-serif" font-size="11" fill="#333">• wait() - Release lock and wait</text>
  <text x="760" y="600" font-family="Arial, sans-serif" font-size="11" fill="#333">• notify() - Wake up one thread</text>
  <text x="760" y="615" font-family="Arial, sans-serif" font-size="11" fill="#333">• notifyAll() - Wake up all threads</text>
  <text x="760" y="630" font-family="Arial, sans-serif" font-size="11" fill="#333">• volatile keyword</text>
  <text x="760" y="645" font-family="Arial, sans-serif" font-size="11" fill="#333">• java.util.concurrent.locks</text>
  
  <!-- Key Notes -->
  <text x="80" y="695" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#666">Key Points:</text>
  <text x="170" y="695" font-family="Arial, sans-serif" font-size="10" fill="#666">• Always call start(), never run() directly</text>
  <text x="380" y="695" font-family="Arial, sans-serif" font-size="10" fill="#666">• Handle InterruptedException properly</text>
  <text x="580" y="695" font-family="Arial, sans-serif" font-size="10" fill="#666">• Use join() to wait for thread completion</text>
  <text x="780" y="695" font-family="Arial, sans-serif" font-size="10" fill="#666">• Synchronize shared resources</text>
</svg>