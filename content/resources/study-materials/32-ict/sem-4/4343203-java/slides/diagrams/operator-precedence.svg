<svg viewBox="0 0 900 800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title-text { font-family: Arial, sans-serif; font-size: 20px; font-weight: bold; fill: #2c3e50; }
      .level-text { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; fill: #ffffff; }
      .operator-text { font-family: 'Courier New', monospace; font-size: 12px; fill: #2c3e50; font-weight: bold; }
      .description-text { font-family: Arial, sans-serif; font-size: 11px; fill: #2c3e50; }
      .example-text { font-family: 'Courier New', monospace; font-size: 10px; fill: #2c3e50; }
      .level-box { stroke: #34495e; stroke-width: 2; rx: 8; }
      .arrow { stroke: #e74c3c; stroke-width: 3; fill: none; marker-end: url(#arrowhead); }
      .highlight { stroke: #f39c12; stroke-width: 3; fill: none; rx: 5; stroke-dasharray: 5,3; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="10" refX="8" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#e74c3c"/>
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="450" y="30" text-anchor="middle" class="title-text">Java Operator Precedence Hierarchy</text>
  <text x="450" y="50" text-anchor="middle" class="description-text">(Higher precedence = evaluated first)</text>
  
  <!-- Precedence Level 1 - Highest -->
  <rect x="50" y="80" width="800" height="50" fill="#e74c3c" class="level-box"/>
  <text x="100" y="100" class="level-text">1. HIGHEST</text>
  <text x="100" y="115" class="level-text">Postfix</text>
  <text x="250" y="100" class="operator-text">++ --</text>
  <text x="250" y="115" class="description-text">expr++, expr--</text>
  <text x="400" y="100" class="description-text">Post-increment, Post-decrement</text>
  <text x="650" y="105" class="example-text">a++ → (a + 1), but returns original a</text>
  
  <!-- Precedence Level 2 -->
  <rect x="50" y="140" width="800" height="50" fill="#c0392b" class="level-box"/>
  <text x="100" y="160" class="level-text">2. UNARY</text>
  <text x="100" y="175" class="level-text">Prefix</text>
  <text x="250" y="160" class="operator-text">++ -- + - ! ~</text>
  <text x="250" y="175" class="description-text">++expr, --expr, +expr, -expr, !expr, ~expr</text>
  <text x="500" y="160" class="description-text">Pre-increment, Pre-decrement, Unary plus/minus,</text>
  <text x="500" y="175" class="description-text">Logical NOT, Bitwise complement</text>
  
  <!-- Precedence Level 3 -->
  <rect x="50" y="200" width="800" height="50" fill="#8e44ad" class="level-box"/>
  <text x="100" y="220" class="level-text">3. MULTIPLICATIVE</text>
  <text x="250" y="220" class="operator-text">* / %</text>
  <text x="250" y="235" class="description-text">Multiply, Divide, Modulus</text>
  <text x="450" y="220" class="description-text">Mathematical multiplication, division, remainder</text>
  <text x="650" y="225" class="example-text">5 * 3 / 2 % 4 → ((5*3)/2)%4 → 7%4 → 3</text>
  
  <!-- Precedence Level 4 -->
  <rect x="50" y="260" width="800" height="50" fill="#2980b9" class="level-box"/>
  <text x="100" y="280" class="level-text">4. ADDITIVE</text>
  <text x="250" y="280" class="operator-text">+ -</text>
  <text x="250" y="295" class="description-text">Addition, Subtraction</text>
  <text x="400" y="280" class="description-text">Mathematical addition and subtraction</text>
  <text x="650" y="285" class="example-text">10 + 5 - 3 → (10+5)-3 → 15-3 → 12</text>
  
  <!-- Precedence Level 5 -->
  <rect x="50" y="320" width="800" height="50" fill="#16a085" class="level-box"/>
  <text x="100" y="340" class="level-text">5. SHIFT</text>
  <text x="250" y="340" class="operator-text">&lt;&lt; &gt;&gt; &gt;&gt;&gt;</text>
  <text x="250" y="355" class="description-text">Left shift, Right shift, Unsigned right shift</text>
  <text x="500" y="340" class="description-text">Bitwise shifting operations</text>
  <text x="650" y="345" class="example-text">8 &lt;&lt; 2 → 32 (shift left by 2 bits)</text>
  
  <!-- Precedence Level 6 -->
  <rect x="50" y="380" width="800" height="50" fill="#f39c12" class="level-box"/>
  <text x="100" y="400" class="level-text">6. RELATIONAL</text>
  <text x="250" y="400" class="operator-text">&lt; &lt;= &gt; &gt;= instanceof</text>
  <text x="250" y="415" class="description-text">Less than, Less/equal, Greater, Greater/equal, Type check</text>
  <text x="550" y="400" class="description-text">Comparison operations</text>
  <text x="650" y="405" class="example-text">a &lt; b &gt; c → (a&lt;b) &gt; c</text>
  
  <!-- Precedence Level 7 -->
  <rect x="50" y="440" width="800" height="50" fill="#d35400" class="level-box"/>
  <text x="100" y="460" class="level-text">7. EQUALITY</text>
  <text x="250" y="460" class="operator-text">== !=</text>
  <text x="250" y="475" class="description-text">Equal to, Not equal to</text>
  <text x="400" y="460" class="description-text">Equality comparison</text>
  <text x="650" y="465" class="example-text">a == b != c → (a==b) != c</text>
  
  <!-- Precedence Level 8 -->
  <rect x="50" y="500" width="800" height="50" fill="#27ae60" class="level-box"/>
  <text x="100" y="520" class="level-text">8. BITWISE AND</text>
  <text x="250" y="520" class="operator-text">&</text>
  <text x="250" y="535" class="description-text">Bitwise AND</text>
  <text x="400" y="520" class="description-text">Bit-by-bit AND operation</text>
  <text x="650" y="525" class="example-text">5 & 3 → 1 (binary: 101 & 011 → 001)</text>
  
  <!-- Precedence Level 9 -->
  <rect x="50" y="560" width="800" height="50" fill="#3498db" class="level-box"/>
  <text x="100" y="580" class="level-text">9. BITWISE XOR</text>
  <text x="250" y="580" class="operator-text">^</text>
  <text x="250" y="595" class="description-text">Bitwise XOR (Exclusive OR)</text>
  <text x="450" y="580" class="description-text">Bit-by-bit XOR operation</text>
  <text x="650" y="585" class="example-text">5 ^ 3 → 6 (binary: 101 ^ 011 → 110)</text>
  
  <!-- Precedence Level 10 -->
  <rect x="50" y="620" width="800" height="50" fill="#9b59b6" class="level-box"/>
  <text x="100" y="640" class="level-text">10. BITWISE OR</text>
  <text x="250" y="640" class="operator-text">|</text>
  <text x="250" y="655" class="description-text">Bitwise OR</text>
  <text x="400" y="640" class="description-text">Bit-by-bit OR operation</text>
  <text x="650" y="645" class="example-text">5 | 3 → 7 (binary: 101 | 011 → 111)</text>
  
  <!-- Precedence Level 11 -->
  <rect x="50" y="680" width="400" height="50" fill="#34495e" class="level-box"/>
  <text x="100" y="700" class="level-text">11. LOGICAL AND</text>
  <text x="100" y="715" class="level-text">(Short-circuit)</text>
  <text x="250" y="700" class="operator-text">&& </text>
  <text x="250" y="715" class="description-text">Logical AND</text>
  <text x="320" y="705" class="example-text">a && b</text>
  
  <!-- Precedence Level 12 -->
  <rect x="450" y="680" width="400" height="50" fill="#7f8c8d" class="level-box"/>
  <text x="500" y="700" class="level-text">12. LOGICAL OR</text>
  <text x="500" y="715" class="level-text">(Short-circuit)</text>
  <text x="650" y="700" class="operator-text">||</text>
  <text x="650" y="715" class="description-text">Logical OR</text>
  <text x="720" y="705" class="example-text">a || b</text>
  
  <!-- Precedence Level 13 -->
  <rect x="50" y="740" width="300" height="50" fill="#95a5a6" class="level-box"/>
  <text x="100" y="760" class="level-text">13. TERNARY</text>
  <text x="250" y="760" class="operator-text">? :</text>
  <text x="250" y="775" class="description-text">Conditional</text>
  <text x="300" y="765" class="example-text">a > b ? a : b</text>
  
  <!-- Precedence Level 14 - Lowest -->
  <rect x="370" y="740" width="480" height="50" fill="#bdc3c7" class="level-box"/>
  <text x="420" y="760" class="level-text">14. LOWEST - ASSIGNMENT</text>
  <text x="650" y="760" class="operator-text">= += -= *= /= %= &= |= ^= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;=</text>
  <text x="650" y="775" class="description-text">Assignment and compound assignment</text>
  
  <!-- Arrow showing precedence direction -->
  <line x1="20" y1="100" x2="20" y2="760" class="arrow"/>
  <text x="15" y="430" class="description-text" transform="rotate(-90 15 430)">Higher Precedence</text>
  
  <!-- Complex Expression Example -->
  <rect x="50" y="30" width="800" height="40" fill="#f8f9fa" stroke="#dee2e6" stroke-width="2" rx="5"/>
  <text x="450" y="45" text-anchor="middle" class="example-text" font-weight="bold">Example: int result = 2 + 3 * 4 > 10 && true || false;</text>
  <text x="450" y="60" text-anchor="middle" class="example-text">Evaluation: 2 + (3*4) → 2 + 12 → 14 > 10 → true && true → true || false → true</text>
</svg>