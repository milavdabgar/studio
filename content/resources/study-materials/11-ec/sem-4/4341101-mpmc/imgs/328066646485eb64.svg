<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="600" viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 24px; font-weight: bold; text-anchor: middle; }
      .subtitle { font-family: Arial, sans-serif; font-size: 16px; font-weight: bold; text-anchor: middle; }
      .label { font-family: Arial, sans-serif; font-size: 12px; text-anchor: middle; }
      .small-label { font-family: Arial, sans-serif; font-size: 10px; text-anchor: middle; }
      .assembly-block { fill: #e6f3ff; stroke: #0066cc; stroke-width: 2; }
      .machine-block { fill: #fff2e6; stroke: #cc6600; stroke-width: 1; }
      .step-block { fill: #e6ffe6; stroke: #009900; stroke-width: 1; }
      .data-flow { stroke: #009900; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#009900"/>
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="400" y="30" class="title" fill="#333">Assembly Language Programming Process</text>
  
  <!-- Source Code -->
  <g id="source-code">
    <text x="150" y="70" class="subtitle" fill="#0066cc">Assembly Source Code</text>
    
    <rect x="50" y="90" width="200" height="120" class="assembly-block"/>
    <text x="150" y="115" class="label" fill="#333">Program.asm</text>
    
    <!-- Sample code -->
    <text x="150" y="135" class="small-label" fill="#333">START: MVI A, 50H</text>
    <text x="150" y="150" class="small-label" fill="#333">       MOV B, A</text>
    <text x="150" y="165" class="small-label" fill="#333">       ADD B</text>
    <text x="150" y="180" class="small-label" fill="#333">       STA 2000H</text>
    <text x="150" y="195" class="small-label" fill="#333">       HLT</text>
  </g>
  
  <!-- Assembler -->
  <g id="assembler">
    <text x="400" y="70" class="subtitle" fill="#0066cc">Assembler</text>
    
    <rect x="300" y="90" width="200" height="120" class="step-block"/>
    <text x="400" y="115" class="label" fill="#333">8085 Assembler</text>
    
    <!-- Assembly process -->
    <text x="400" y="140" class="small-label" fill="#333">• Parse mnemonics</text>
    <text x="400" y="155" class="small-label" fill="#333">• Convert to machine code</text>
    <text x="400" y="170" class="small-label" fill="#333">• Resolve addresses</text>
    <text x="400" y="185" class="small-label" fill="#333">• Generate object file</text>
    
    <!-- Arrow from source -->
    <path d="M 250 150 L 300 150" class="data-flow"/>
  </g>
  
  <!-- Object Code -->
  <g id="object-code">
    <text x="650" y="70" class="subtitle" fill="#0066cc">Object Code</text>
    
    <rect x="550" y="90" width="200" height="120" class="machine-block"/>
    <text x="650" y="115" class="label" fill="#333">Program.obj</text>
    
    <!-- Machine code -->
    <text x="650" y="135" class="small-label" fill="#333">3E 50    ; MVI A, 50H</text>
    <text x="650" y="150" class="small-label" fill="#333">47       ; MOV B, A</text>
    <text x="650" y="165" class="small-label" fill="#333">80       ; ADD B</text>
    <text x="650" y="180" class="small-label" fill="#333">32 00 20 ; STA 2000H</text>
    <text x="650" y="195" class="small-label" fill="#333">76       ; HLT</text>
    
    <!-- Arrow from assembler -->
    <path d="M 500 150 L 550 150" class="data-flow"/>
  </g>
  
  <!-- Two-Pass Assembly -->
  <g id="two-pass">
    <text x="200" y="250" class="subtitle" fill="#009900">Two-Pass Assembly Process</text>
    
    <!-- Pass 1 -->
    <rect x="50" y="270" width="150" height="80" class="step-block"/>
    <text x="125" y="295" class="label" fill="#333">Pass 1</text>
    <text x="125" y="315" class="small-label" fill="#333">• Build Symbol Table</text>
    <text x="125" y="330" class="small-label" fill="#333">• Calculate addresses</text>
    <text x="125" y="345" class="small-label" fill="#333">• Check syntax</text>
    
    <!-- Pass 2 -->
    <rect x="220" y="270" width="150" height="80" class="step-block"/>
    <text x="295" y="295" class="label" fill="#333">Pass 2</text>
    <text x="295" y="315" class="small-label" fill="#333">• Generate machine code</text>
    <text x="295" y="330" class="small-label" fill="#333">• Resolve symbols</text>
    <text x="295" y="345" class="small-label" fill="#333">• Create object file</text>
    
    <!-- Arrow between passes -->
    <path d="M 200 310 L 220 310" class="data-flow"/>
  </g>
  
  <!-- Symbol Table -->
  <g id="symbol-table">
    <text x="500" y="250" class="subtitle" fill="#009900">Symbol Table</text>
    
    <rect x="420" y="270" width="160" height="120" class="assembly-block"/>
    <text x="500" y="295" class="label" fill="#333">Generated in Pass 1</text>
    
    <!-- Table headers -->
    <text x="450" y="315" class="small-label" fill="#333">Symbol    Address</text>
    <text x="450" y="330" class="small-label" fill="#333">START     2000H</text>
    <text x="450" y="345" class="small-label" fill="#333">LOOP      2005H</text>
    <text x="450" y="360" class="small-label" fill="#333">DATA1     3000H</text>
    <text x="450" y="375" class="small-label" fill="#333">RESULT    3001H</text>
  </g>
  
  <!-- Linker/Loader -->
  <g id="linker-loader">
    <text x="200" y="420" class="subtitle" fill="#cc6600">Linker and Loader</text>
    
    <!-- Linker -->
    <rect x="50" y="440" width="120" height="60" class="machine-block"/>
    <text x="110" y="465" class="label" fill="#333">Linker</text>
    <text x="110" y="480" class="small-label" fill="#333">• Links modules</text>
    <text x="110" y="490" class="small-label" fill="#333">• Resolves externals</text>
    
    <!-- Loader -->
    <rect x="190" y="440" width="120" height="60" class="machine-block"/>
    <text x="250" y="465" class="label" fill="#333">Loader</text>
    <text x="250" y="480" class="small-label" fill="#333">• Loads into memory</text>
    <text x="250" y="490" class="small-label" fill="#333">• Relocates addresses</text>
    
    <!-- Executable -->
    <rect x="330" y="440" width="120" height="60" class="assembly-block"/>
    <text x="390" y="465" class="label" fill="#333">Executable</text>
    <text x="390" y="480" class="small-label" fill="#333">• Ready to run</text>
    <text x="390" y="490" class="small-label" fill="#333">• In memory</text>
    
    <!-- Arrows -->
    <path d="M 170 470 L 190 470" class="data-flow"/>
    <path d="M 310 470 L 330 470" class="data-flow"/>
  </g>
  
  <!-- Assembly Directives -->
  <g id="directives">
    <text x="600" y="420" class="subtitle" fill="#cc6600">Assembly Directives</text>
    
    <rect x="500" y="440" width="200" height="120" class="step-block"/>
    <text x="600" y="465" class="label" fill="#333">Common Directives</text>
    
    <text x="600" y="485" class="small-label" fill="#333">ORG 2000H  ; Set origin</text>
    <text x="600" y="500" class="small-label" fill="#333">DB 25H     ; Define byte</text>
    <text x="600" y="515" class="small-label" fill="#333">DW 1234H   ; Define word</text>
    <text x="600" y="530" class="small-label" fill="#333">DS 10      ; Define space</text>
    <text x="600" y="545" class="small-label" fill="#333">EQU        ; Equate symbol</text>
    <text x="600" y="555" class="small-label" fill="#333">END        ; End program</text>
  </g>
  
  <!-- Memory Layout -->
  <g id="memory-layout">
    <text x="100" y="530" class="subtitle" fill="#0066cc">Memory Layout</text>
    
    <!-- Memory sections -->
    <rect x="50" y="550" width="80" height="25" class="assembly-block"/>
    <text x="90" y="567" class="small-label" fill="#333">Code Segment</text>
    
    <rect x="140" y="550" width="80" height="25" class="machine-block"/>
    <text x="180" y="567" class="small-label" fill="#333">Data Segment</text>
    
    <rect x="230" y="550" width="80" height="25" class="step-block"/>
    <text x="270" y="567" class="small-label" fill="#333">Stack Segment</text>
    
    <rect x="320" y="550" width="80" height="25" class="assembly-block"/>
    <text x="360" y="567" class="small-label" fill="#333">Extra Segment</text>
  </g>
</svg>
