<svg viewBox="0 0 900 700" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 20px; font-weight: bold; fill: #2c3e50; text-anchor: middle; }
      .label { font-family: Arial, sans-serif; font-size: 12px; fill: #2c3e50; text-anchor: middle; }
      .small-label { font-family: Arial, sans-serif; font-size: 10px; fill: #2c3e50; text-anchor: middle; }
      .interrupt-high { stroke: #e74c3c; stroke-width: 2; fill: #fdedec; }
      .interrupt-med { stroke: #f39c12; stroke-width: 2; fill: #fef9e7; }
      .interrupt-low { stroke: #3498db; stroke-width: 2; fill: #ebf5fb; }
      .vector-box { stroke: #27ae60; stroke-width: 2; fill: #eafaf1; }
      .control-block { stroke: #9b59b6; stroke-width: 2; fill: #f4f0ff; }
      .connection-line { stroke: #34495e; stroke-width: 2; fill: none; }
    </style>
  </defs>

  <!-- Title -->
  <text x="450" y="25" class="title">8085 Interrupt System Architecture</text>

  <!-- Interrupt Priority Hierarchy -->
  <g class="priority-section">
    <text x="150" y="60" class="label">Interrupt Priority (High to Low)</text>
    
    <!-- TRAP (Highest Priority) -->
    <rect x="50" y="75" width="200" height="50" class="interrupt-high"/>
    <text x="150" y="95" class="label">TRAP (RST 4.5)</text>
    <text x="150" y="110" class="small-label">Non-maskable, Edge-triggered</text>
    <text x="150" y="120" class="small-label">Vector: 0024H</text>
    
    <!-- RST 7.5 -->
    <rect x="50" y="135" width="200" height="50" class="interrupt-med"/>
    <text x="150" y="155" class="label">RST 7.5</text>
    <text x="150" y="170" class="small-label">Maskable, Edge-triggered</text>
    <text x="150" y="180" class="small-label">Vector: 003CH</text>
    
    <!-- RST 6.5 -->
    <rect x="50" y="195" width="200" height="50" class="interrupt-med"/>
    <text x="150" y="215" class="label">RST 6.5</text>
    <text x="150" y="230" class="small-label">Maskable, Level-triggered</text>
    <text x="150" y="240" class="small-label">Vector: 0034H</text>
    
    <!-- RST 5.5 -->
    <rect x="50" y="255" width="200" height="50" class="interrupt-med"/>
    <text x="150" y="275" class="label">RST 5.5</text>
    <text x="150" y="290" class="small-label">Maskable, Level-triggered</text>
    <text x="150" y="300" class="small-label">Vector: 002CH</text>
    
    <!-- INTR (Lowest Priority) -->
    <rect x="50" y="315" width="200" height="50" class="interrupt-low"/>
    <text x="150" y="335" class="label">INTR</text>
    <text x="150" y="350" class="small-label">Maskable, Level-triggered</text>
    <text x="150" y="360" class="small-label">Vector: Device provides</text>
  </g>

  <!-- Interrupt Control Logic -->
  <g class="control-logic">
    <rect x="300" y="75" width="250" height="290" class="control-block"/>
    <text x="425" y="100" class="label">Interrupt Control Logic</text>
    
    <!-- Enable/Disable Control -->
    <rect x="320" y="115" width="210" height="40" fill="#e8f4fd" stroke="#3498db"/>
    <text x="425" y="135" class="small-label">Global Interrupt Enable/Disable</text>
    <text x="425" y="148" class="small-label">(EI/DI instructions)</text>
    
    <!-- Mask Register -->
    <rect x="320" y="165" width="210" height="40" fill="#fef7e0" stroke="#f39c12"/>
    <text x="425" y="185" class="small-label">Interrupt Mask Register</text>
    <text x="425" y="198" class="small-label">(SIM instruction controls)</text>
    
    <!-- Priority Logic -->
    <rect x="320" y="215" width="210" height="40" fill="#f0f9ff" stroke="#0ea5e9"/>
    <text x="425" y="235" class="small-label">Priority Resolution Logic</text>
    <text x="425" y="248" class="small-label">(Hardware priority encoder)</text>
    
    <!-- Vector Generation -->
    <rect x="320" y="265" width="210" height="40" fill="#f0fdf4" stroke="#22c55e"/>
    <text x="425" y="285" class="small-label">Interrupt Vector Generation</text>
    <text x="425" y="298" class="small-label">(Address calculation)</text>
    
    <!-- Acknowledge Logic -->
    <rect x="320" y="315" width="210" height="40" fill="#fdf4ff" stroke="#a855f7"/>
    <text x="425" y="335" class="small-label">Interrupt Acknowledge</text>
    <text x="425" y="348" class="small-label">(INTA signal generation)</text>
  </g>

  <!-- Vector Address Table -->
  <g class="vector-table">
    <rect x="600" y="75" width="250" height="290" class="vector-box"/>
    <text x="725" y="100" class="label">Interrupt Vector Addresses</text>
    
    <!-- Vector addresses -->
    <rect x="620" y="115" width="210" height="30" fill="#fff1f2" stroke="#f43f5e"/>
    <text x="725" y="135" class="small-label">TRAP: 0024H (8 bytes available)</text>
    
    <rect x="620" y="150" width="210" height="30" fill="#fefce8" stroke="#eab308"/>
    <text x="725" y="170" class="small-label">RST 5.5: 002CH (8 bytes)</text>
    
    <rect x="620" y="185" width="210" height="30" fill="#fefce8" stroke="#eab308"/>
    <text x="725" y="205" class="small-label">RST 6.5: 0034H (8 bytes)</text>
    
    <rect x="620" y="220" width="210" height="30" fill="#fefce8" stroke="#eab308"/>
    <text x="725" y="240" class="small-label">RST 7.5: 003CH (8 bytes)</text>
    
    <rect x="620" y="255" width="210" height="30" fill="#f0f9ff" stroke="#0ea5e9"/>
    <text x="725" y="275" class="small-label">INTR: Variable (device provides)</text>
    
    <!-- Memory layout -->
    <text x="725" y="300" class="small-label">Each vector has 8 bytes</text>
    <text x="725" y="315" class="small-label">for ISR or JMP instruction</text>
    <text x="725" y="330" class="small-label">to actual ISR location</text>
    <text x="725" y="345" class="small-label">in memory</text>
  </g>

  <!-- Interrupt Processing Flow -->
  <g class="processing-flow">
    <rect x="50" y="400" width="800" height="280" stroke="#34495e" stroke-width="2" fill="#f8f9fa"/>
    <text x="450" y="425" class="label">Interrupt Processing Flow</text>
    
    <!-- Step 1 -->
    <rect x="80" y="450" width="140" height="60" fill="#e3f2fd" stroke="#1976d2"/>
    <text x="150" y="470" class="small-label">1. Interrupt Request</text>
    <text x="150" y="485" class="small-label">External device</text>
    <text x="150" y="500" class="small-label">asserts interrupt pin</text>
    
    <!-- Step 2 -->
    <rect x="240" y="450" width="140" height="60" fill="#fff3e0" stroke="#f57c00"/>
    <text x="310" y="470" class="small-label">2. Priority Check</text>
    <text x="310" y="485" class="small-label">Hardware resolves</text>
    <text x="310" y="500" class="small-label">priority conflicts</text>
    
    <!-- Step 3 -->
    <rect x="400" y="450" width="140" height="60" fill="#f3e5f5" stroke="#7b1fa2"/>
    <text x="470" y="470" class="small-label">3. Mask Check</text>
    <text x="470" y="485" class="small-label">Verify interrupt</text>
    <text x="470" y="500" class="small-label">is enabled</text>
    
    <!-- Step 4 -->
    <rect x="560" y="450" width="140" height="60" fill="#e8f5e8" stroke="#388e3c"/>
    <text x="630" y="470" class="small-label">4. Current Instruction</text>
    <text x="630" y="485" class="small-label">Complete current</text>
    <text x="630" y="500" class="small-label">instruction execution</text>
    
    <!-- Step 5 -->
    <rect x="720" y="450" width="140" height="60" fill="#fce4ec" stroke="#c2185b"/>
    <text x="790" y="470" class="small-label">5. Save Context</text>
    <text x="790" y="485" class="small-label">Push PC onto</text>
    <text x="790" y="500" class="small-label">stack</text>
    
    <!-- Arrows between steps -->
    <path d="M 220 480 L 240 480" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
    <path d="M 380 480 L 400 480" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
    <path d="M 540 480 L 560 480" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
    <path d="M 700 480 L 720 480" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
    
    <!-- Step 6 -->
    <rect x="80" y="530" width="140" height="60" fill="#fff8e1" stroke="#ffa000"/>
    <text x="150" y="550" class="small-label">6. Disable Interrupts</text>
    <text x="150" y="565" class="small-label">Prevent nested</text>
    <text x="150" y="580" class="small-label">interrupts</text>
    
    <!-- Step 7 -->
    <rect x="240" y="530" width="140" height="60" fill="#f1f8e9" stroke="#689f38"/>
    <text x="310" y="550" class="small-label">7. Jump to ISR</text>
    <text x="310" y="565" class="small-label">Load vector address</text>
    <text x="310" y="580" class="small-label">into PC</text>
    
    <!-- Step 8 -->
    <rect x="400" y="530" width="140" height="60" fill="#e0f2f1" stroke="#00695c"/>
    <text x="470" y="550" class="small-label">8. Execute ISR</text>
    <text x="470" y="565" class="small-label">Interrupt service</text>
    <text x="470" y="580" class="small-label">routine code</text>
    
    <!-- Step 9 -->
    <rect x="560" y="530" width="140" height="60" fill="#fafafa" stroke="#424242"/>
    <text x="630" y="550" class="small-label">9. Return (RET)</text>
    <text x="630" y="565" class="small-label">Pop PC from</text>
    <text x="630" y="580" class="small-label">stack</text>
    
    <!-- Step 10 -->
    <rect x="720" y="530" width="140" height="60" fill="#e8eaf6" stroke="#3f51b5"/>
    <text x="790" y="550" class="small-label">10. Resume</text>
    <text x="790" y="565" class="small-label">Continue main</text>
    <text x="790" y="580" class="small-label">program</text>
    
    <!-- More arrows -->
    <path d="M 220 560 L 240 560" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
    <path d="M 380 560 L 400 560" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
    <path d="M 540 560 L 560 560" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
    <path d="M 700 560 L 720 560" stroke="#34495e" stroke-width="2" marker-end="url(#arrowhead)"/>
    
    <!-- Control Instructions -->
    <text x="450" y="630" class="label">Key Control Instructions</text>
    <text x="200" y="650" class="small-label">EI - Enable Interrupts</text>
    <text x="350" y="650" class="small-label">DI - Disable Interrupts</text>
    <text x="500" y="650" class="small-label">SIM - Set Interrupt Mask</text>
    <text x="650" y="650" class="small-label">RIM - Read Interrupt Mask</text>
  </g>

  <!-- Arrow marker definition -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
     refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e"/>
    </marker>
  </defs>

  <!-- Connections from interrupts to control logic -->
  <line x1="250" y1="100" x2="300" y2="100" class="connection-line"/>
  <line x1="250" y1="160" x2="300" y2="160" class="connection-line"/>
  <line x1="250" y1="220" x2="300" y2="220" class="connection-line"/>
  <line x1="250" y1="280" x2="300" y2="280" class="connection-line"/>
  <line x1="250" y1="340" x2="300" y2="340" class="connection-line"/>
  
  <!-- Connections from control logic to vector table -->
  <line x1="550" y1="220" x2="600" y2="220" class="connection-line"/>
</svg>
