<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="600" viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .instruction-block { fill: #e2e8f0; stroke: #4a5568; stroke-width: 2; }
      .fetch-phase { fill: #fed7d7; stroke: #e53e3e; stroke-width: 2; }
      .decode-phase { fill: #faf0e6; stroke: #d69e2e; stroke-width: 2; }
      .execute-phase { fill: #c6f6d5; stroke: #38a169; stroke-width: 2; }
      .memory-block { fill: #bee3f8; stroke: #3182ce; stroke-width: 2; }
      .register-block { fill: #e6fffa; stroke: #319795; stroke-width: 2; }
      .label-text { font-family: Arial, sans-serif; font-size: 12px; fill: #2d3748; text-anchor: middle; font-weight: bold; }
      .step-text { font-family: Arial, sans-serif; font-size: 10px; fill: #2d3748; }
      .arrow { stroke: #4a5568; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .phase-label { font-family: Arial, sans-serif; font-size: 14px; fill: #2d3748; font-weight: bold; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#4a5568"/>
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="400" y="25" style="font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #2d3748; text-anchor: middle;">8085 Instruction Execution Cycle</text>
  
  <!-- Program Counter -->
  <rect x="50" y="60" width="80" height="30" class="register-block"/>
  <text x="90" y="80" class="label-text">PC</text>
  <text x="140" y="80" class="step-text">Program Counter</text>
  
  <!-- Memory -->
  <rect x="300" y="60" width="100" height="80" class="memory-block"/>
  <text x="350" y="85" class="label-text">Memory</text>
  <text x="350" y="100" class="step-text">Instructions &amp;</text>
  <text x="350" y="115" class="step-text">Data Storage</text>
  
  <!-- Instruction Register -->
  <rect x="550" y="60" width="80" height="30" class="register-block"/>
  <text x="590" y="80" class="label-text">IR</text>
  <text x="640" y="80" class="step-text">Instruction Register</text>
  
  <!-- FETCH PHASE -->
  <g class="fetch-phase-group">
    <text x="50" y="180" class="phase-label">1. FETCH PHASE</text>
    
    <!-- Step 1: PC to Address Bus -->
    <rect x="50" y="200" width="200" height="40" class="fetch-phase"/>
    <text x="150" y="225" class="label-text">PC → Address Bus</text>
    
    <!-- Step 2: Memory Read -->
    <rect x="270" y="200" width="200" height="40" class="fetch-phase"/>
    <text x="370" y="225" class="label-text">Memory Read Operation</text>
    
    <!-- Step 3: Instruction to IR -->
    <rect x="490" y="200" width="200" height="40" class="fetch-phase"/>
    <text x="590" y="225" class="label-text">Instruction → IR</text>
    
    <!-- Arrows for fetch phase -->
    <line x1="250" y1="220" x2="270" y2="220" class="arrow"/>
    <line x1="470" y1="220" x2="490" y2="220" class="arrow"/>
  </g>
  
  <!-- DECODE PHASE -->
  <g class="decode-phase-group">
    <text x="50" y="290" class="phase-label">2. DECODE PHASE</text>
    
    <!-- Step 1: Instruction Decode -->
    <rect x="50" y="310" width="200" height="40" class="decode-phase"/>
    <text x="150" y="335" class="label-text">Decode Instruction</text>
    
    <!-- Step 2: Control Signal Generation -->
    <rect x="270" y="310" width="200" height="40" class="decode-phase"/>
    <text x="370" y="335" class="label-text">Generate Control Signals</text>
    
    <!-- Step 3: Operand Address Calculation -->
    <rect x="490" y="310" width="200" height="40" class="decode-phase"/>
    <text x="590" y="335" class="label-text">Calculate Operand Address</text>
    
    <!-- Arrows for decode phase -->
    <line x1="250" y1="330" x2="270" y2="330" class="arrow"/>
    <line x1="470" y1="330" x2="490" y2="330" class="arrow"/>
  </g>
  
  <!-- EXECUTE PHASE -->
  <g class="execute-phase-group">
    <text x="50" y="400" class="phase-label">3. EXECUTE PHASE</text>
    
    <!-- Step 1: Fetch Operands -->
    <rect x="50" y="420" width="140" height="40" class="execute-phase"/>
    <text x="120" y="445" class="label-text">Fetch Operands</text>
    
    <!-- Step 2: Perform Operation -->
    <rect x="210" y="420" width="140" height="40" class="execute-phase"/>
    <text x="280" y="445" class="label-text">ALU Operation</text>
    
    <!-- Step 3: Store Result -->
    <rect x="370" y="420" width="140" height="40" class="execute-phase"/>
    <text x="440" y="445" class="label-text">Store Result</text>
    
    <!-- Step 4: Update PC -->
    <rect x="530" y="420" width="140" height="40" class="execute-phase"/>
    <text x="600" y="445" class="label-text">Update PC</text>
    
    <!-- Arrows for execute phase -->
    <line x1="190" y1="440" x2="210" y2="440" class="arrow"/>
    <line x1="350" y1="440" x2="370" y2="440" class="arrow"/>
    <line x1="510" y1="440" x2="530" y2="440" class="arrow"/>
  </g>
  
  <!-- Connecting arrows between main components -->
  <line x1="130" y1="100" x2="300" y2="100" class="arrow"/>
  <text x="200" y="95" class="step-text">Address</text>
  
  <line x1="400" y1="100" x2="550" y2="100" class="arrow"/>
  <text x="460" y="95" class="step-text">Instruction</text>
  
  <!-- Cycle completion arrow -->
  <path d="M 670 440 Q 720 440 720 100 Q 720 60 130 60" class="arrow" fill="none"/>
  <text x="725" y="250" class="step-text" transform="rotate(90 725 250)">Next Cycle</text>
  
  <!-- Machine Cycle Information -->
  <g class="machine-cycle-info">
    <text x="50" y="520" style="font-family: Arial, sans-serif; font-size: 12px; font-weight: bold; fill: #2d3748;">Machine Cycle Details:</text>
    <text x="50" y="540" class="step-text">• Fetch: 4 T-states (T1-T4) - Opcode fetch from memory</text>
    <text x="50" y="555" class="step-text">• Decode: 1-2 T-states - Instruction analysis and control signal generation</text>
    <text x="50" y="570" class="step-text">• Execute: 1-18 T-states (varies by instruction complexity)</text>
    
    <text x="400" y="540" class="step-text">• Simple instructions: 4-7 T-states total</text>
    <text x="400" y="555" class="step-text">• Memory reference: 7-13 T-states total</text>
    <text x="400" y="570" class="step-text">• Branch instructions: 7-12 T-states total</text>
  </g>
  
  <!-- Example instruction flow -->
  <g class="example-flow">
    <text x="250" y="500" style="font-family: Arial, sans-serif; font-size: 11px; font-weight: bold; fill: #2d3748;">Example: MOV A,B Instruction</text>
    <text x="250" y="515" style="font-family: 'Courier New', monospace; font-size: 9px; fill: #4a5568;">Fetch(4) → Decode(1) → Execute(1) = 6 T-states total</text>
  </g>
</svg>
