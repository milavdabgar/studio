<svg viewBox="0 0 800 650" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #2c3e50; text-anchor: middle; }
      .label { font-family: Arial, sans-serif; font-size: 12px; fill: #2c3e50; text-anchor: middle; }
      .small-label { font-family: Arial, sans-serif; font-size: 10px; fill: #2c3e50; text-anchor: middle; }
      .fetch-block { stroke: #3498db; stroke-width: 2; fill: #ebf5fb; }
      .decode-block { stroke: #f39c12; stroke-width: 2; fill: #fef9e7; }
      .execute-block { stroke: #e74c3c; stroke-width: 2; fill: #fdedec; }
      .store-block { stroke: #27ae60; stroke-width: 2; fill: #eafaf1; }
      .control-block { stroke: #9b59b6; stroke-width: 2; fill: #f4f0ff; }
      .flow-arrow { stroke: #34495e; stroke-width: 3; fill: none; marker-end: url(#arrowhead); }
      .cycle-line { stroke: #bdc3c7; stroke-width: 1; fill: none; stroke-dasharray: 5,5; }
    </style>
  </defs>

  <!-- Arrow marker definition -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
     refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e"/>
    </marker>
  </defs>

  <!-- Title -->
  <text x="400" y="25" class="title">Instruction Execution Cycle - Fetch, Decode, Execute</text>

  <!-- Fetch Phase -->
  <g class="fetch-phase">
    <rect x="50" y="60" width="180" height="120" class="fetch-block"/>
    <text x="140" y="85" class="label">FETCH</text>
    
    <!-- Fetch steps -->
    <rect x="70" y="100" width="140" height="20" fill="#d6eaf8" stroke="#3498db"/>
    <text x="140" y="113" class="small-label">1. PC → Address Bus</text>
    
    <rect x="70" y="125" width="140" height="20" fill="#d6eaf8" stroke="#3498db"/>
    <text x="140" y="138" class="small-label">2. Memory → Data Bus</text>
    
    <rect x="70" y="150" width="140" height="20" fill="#d6eaf8" stroke="#3498db"/>
    <text x="140" y="163" class="small-label">3. Data → Instruction Register</text>
  </g>

  <!-- Decode Phase -->
  <g class="decode-phase">
    <rect x="280" y="60" width="180" height="120" class="decode-block"/>
    <text x="370" y="85" class="label">DECODE</text>
    
    <!-- Decode steps -->
    <rect x="300" y="100" width="140" height="20" fill="#fcf3cf" stroke="#f39c12"/>
    <text x="370" y="113" class="small-label">1. Analyze Opcode</text>
    
    <rect x="300" y="125" width="140" height="20" fill="#fcf3cf" stroke="#f39c12"/>
    <text x="370" y="138" class="small-label">2. Identify Operation</text>
    
    <rect x="300" y="150" width="140" height="20" fill="#fcf3cf" stroke="#f39c12"/>
    <text x="370" y="163" class="small-label">3. Determine Operands</text>
  </g>

  <!-- Execute Phase -->
  <g class="execute-phase">
    <rect x="510" y="60" width="180" height="120" class="execute-block"/>
    <text x="600" y="85" class="label">EXECUTE</text>
    
    <!-- Execute steps -->
    <rect x="530" y="100" width="140" height="20" fill="#fadbd8" stroke="#e74c3c"/>
    <text x="600" y="113" class="small-label">1. Fetch Operands</text>
    
    <rect x="530" y="125" width="140" height="20" fill="#fadbd8" stroke="#e74c3c"/>
    <text x="600" y="138" class="small-label">2. Perform Operation</text>
    
    <rect x="530" y="150" width="140" height="20" fill="#fadbd8" stroke="#e74c3c"/>
    <text x="600" y="163" class="small-label">3. Update Flags</text>
  </g>

  <!-- Flow arrows between phases -->
  <path d="M 230 120 L 280 120" class="flow-arrow"/>
  <path d="M 460 120 L 510 120" class="flow-arrow"/>

  <!-- Store/Write Back Phase -->
  <g class="store-phase">
    <rect x="280" y="220" width="180" height="100" class="store-block"/>
    <text x="370" y="245" class="label">STORE/WRITE BACK</text>
    
    <!-- Store steps -->
    <rect x="300" y="260" width="140" height="20" fill="#d5f4e6" stroke="#27ae60"/>
    <text x="370" y="273" class="small-label">1. Result → Destination</text>
    
    <rect x="300" y="285" width="140" height="20" fill="#d5f4e6" stroke="#27ae60"/>
    <text x="370" y="298" class="small-label">2. Update PC</text>
  </g>

  <!-- Arrow from Execute to Store -->
  <path d="M 600 180 L 600 200 L 370 200 L 370 220" class="flow-arrow"/>

  <!-- Control Unit -->
  <g class="control-unit">
    <rect x="50" y="220" width="180" height="100" class="control-block"/>
    <text x="140" y="245" class="label">CONTROL UNIT</text>
    
    <rect x="70" y="260" width="140" height="20" fill="#ebdef0" stroke="#9b59b6"/>
    <text x="140" y="273" class="small-label">Timing &amp; Control Signals</text>
    
    <rect x="70" y="285" width="140" height="20" fill="#ebdef0" stroke="#9b59b6"/>
    <text x="140" y="298" class="small-label">Sequence Coordination</text>
  </g>

  <!-- Arrow from Store back to Fetch -->
  <path d="M 280 270 L 250 270 L 250 190 L 140 190 L 140 180" class="flow-arrow"/>

  <!-- Detailed Cycle Breakdown -->
  <g class="cycle-breakdown">
    <rect x="50" y="350" width="700" height="280" stroke="#34495e" stroke-width="2" fill="#f8f9fa"/>
    <text x="400" y="375" class="label">Detailed Instruction Execution Cycle</text>
    
    <!-- Machine Cycles -->
    <text x="100" y="400" class="label">Machine Cycles and T-States</text>
    
    <!-- Opcode Fetch -->
    <rect x="70" y="420" width="120" height="60" fill="#eaf2f8" stroke="#2980b9"/>
    <text x="130" y="440" class="small-label">Opcode Fetch</text>
    <text x="130" y="455" class="small-label">M1 (4 T-states)</text>
    <text x="130" y="470" class="small-label">T1-T4</text>
    
    <!-- Memory Read -->
    <rect x="210" y="420" width="120" height="60" fill="#fdf2e9" stroke="#f39c12"/>
    <text x="270" y="440" class="small-label">Memory Read</text>
    <text x="270" y="455" class="small-label">M2 (3 T-states)</text>
    <text x="270" y="470" class="small-label">T1-T3</text>
    
    <!-- ALU Operation -->
    <rect x="350" y="420" width="120" height="60" fill="#fdedec" stroke="#e74c3c"/>
    <text x="410" y="440" class="small-label">ALU Operation</text>
    <text x="410" y="455" class="small-label">Internal</text>
    <text x="410" y="470" class="small-label">1-2 T-states</text>
    
    <!-- Memory Write -->
    <rect x="490" y="420" width="120" height="60" fill="#eafaf1" stroke="#27ae60"/>
    <text x="550" y="440" class="small-label">Memory Write</text>
    <text x="550" y="455" class="small-label">M3 (3 T-states)</text>
    <text x="550" y="470" class="small-label">T1-T3</text>
    
    <!-- PC Update -->
    <rect x="630" y="420" width="100" height="60" fill="#f4f0ff" stroke="#9b59b6"/>
    <text x="680" y="440" class="small-label">PC Update</text>
    <text x="680" y="455" class="small-label">Internal</text>
    <text x="680" y="470" class="small-label">1 T-state</text>
    
    <!-- T-State Details -->
    <text x="100" y="510" class="label">T-State Breakdown (for Opcode Fetch)</text>
    
    <!-- T1 -->
    <rect x="70" y="530" width="100" height="50" fill="#e8f6f3" stroke="#1abc9c"/>
    <text x="120" y="545" class="small-label">T1</text>
    <text x="120" y="560" class="small-label">Address Setup</text>
    <text x="120" y="570" class="small-label">ALE Pulse</text>
    
    <!-- T2 -->
    <rect x="180" y="530" width="100" height="50" fill="#ebf5fb" stroke="#3498db"/>
    <text x="230" y="545" class="small-label">T2</text>
    <text x="230" y="560" class="small-label">RD Active</text>
    <text x="230" y="570" class="small-label">Data Valid</text>
    
    <!-- T3 -->
    <rect x="290" y="530" width="100" height="50" fill="#fdf2e9" stroke="#f39c12"/>
    <text x="340" y="545" class="small-label">T3</text>
    <text x="340" y="560" class="small-label">Data Latch</text>
    <text x="340" y="570" class="small-label">RD Inactive</text>
    
    <!-- T4 -->
    <rect x="400" y="530" width="100" height="50" fill="#fdedec" stroke="#e74c3c"/>
    <text x="450" y="545" class="small-label">T4</text>
    <text x="450" y="560" class="small-label">Decode Begin</text>
    <text x="450" y="570" class="small-label">PC Increment</text>
    
    <!-- Instruction Types -->
    <text x="550" y="510" class="label">Instruction Categories</text>
    
    <rect x="530" y="530" width="200" height="15" fill="#f8f9fa" stroke="#6c757d"/>
    <text x="630" y="542" class="small-label">Single Byte: 1 Machine Cycle (4 T-states)</text>
    
    <rect x="530" y="550" width="200" height="15" fill="#f8f9fa" stroke="#6c757d"/>
    <text x="630" y="562" class="small-label">Two Byte: 2 Machine Cycles (7 T-states)</text>
    
    <rect x="530" y="570" width="200" height="15" fill="#f8f9fa" stroke="#6c757d"/>
    <text x="630" y="582" class="small-label">Three Byte: 3 Machine Cycles (10 T-states)</text>
    
    <!-- Performance Notes -->
    <text x="400" y="610" class="label">Performance Characteristics</text>
    <text x="400" y="625" class="small-label">• Clock frequency determines instruction execution speed</text>
    <text x="400" y="640" class="small-label">• Pipeline stalls occur during memory access conflicts</text>
    <text x="400" y="655" class="small-label">• Branch instructions may require additional cycles</text>
  </g>

  <!-- Control lines connecting Control Unit -->
  <line x1="140" y1="220" x2="140" y2="180" class="cycle-line"/>
  <line x1="230" y1="270" x2="280" y2="270" class="cycle-line"/>
  <line x1="140" y1="320" x2="370" y2="320" class="cycle-line"/>
  <line x1="370" y1="320" x2="600" y2="320" class="cycle-line"/>
  <line x1="600" y1="320" x2="600" y2="180" class="cycle-line"/>
</svg>
