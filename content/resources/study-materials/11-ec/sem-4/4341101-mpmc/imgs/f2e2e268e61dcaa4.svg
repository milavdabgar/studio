<svg width="600" height="500" viewBox="0 0 600 500" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; text-anchor: middle; }
      .subtitle { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; text-anchor: middle; }
      .label { font-family: Arial, sans-serif; font-size: 12px; text-anchor: middle; }
      .pin-label { font-family: Arial, sans-serif; font-size: 10px; text-anchor: start; }
      .cycle-box { fill: #e6f3ff; stroke: #0066cc; stroke-width: 2; }
      .state-box { fill: #ffe6e6; stroke: #cc0000; stroke-width: 2; }
      .execution-box { fill: #fff8dc; stroke: #b8860b; stroke-width: 2; }
      .memory-box { fill: #f0fff0; stroke: #009900; stroke-width: 2; }
      .flow-arrow { stroke: #ff6b6b; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
            refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#ff6b6b" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="300" y="25" class="title">8051 Instruction Execution Cycle</text>
  
  <!-- Fetch Phase -->
  <g class="fetch-phase">
    <text x="150" y="55" class="subtitle">1. Instruction Fetch</text>
    
    <rect x="50" y="70" width="200" height="120" class="cycle-box" />
    <text x="150" y="95" class="label">Fetch Cycle</text>
    
    <text x="60" y="115" class="pin-label">• PC points to instruction</text>
    <text x="60" y="130" class="pin-label">• Send address to memory</text>
    <text x="60" y="145" class="pin-label">• Read instruction opcode</text>
    <text x="60" y="160" class="pin-label">• Increment PC</text>
    <text x="60" y="175" class="pin-label">• Store in instruction register</text>
  </g>
  
  <!-- Decode Phase -->
  <g class="decode-phase">
    <text x="450" y="55" class="subtitle">2. Instruction Decode</text>
    
    <rect x="350" y="70" width="200" height="120" class="state-box" />
    <text x="450" y="95" class="label">Decode Cycle</text>
    
    <text x="360" y="115" class="pin-label">• Analyze instruction opcode</text>
    <text x="360" y="130" class="pin-label">• Determine operation type</text>
    <text x="360" y="145" class="pin-label">• Identify addressing mode</text>
    <text x="360" y="160" class="pin-label">• Prepare control signals</text>
    <text x="360" y="175" class="pin-label">• Set up data paths</text>
  </g>
  
  <!-- Execute Phase -->
  <g class="execute-phase">
    <text x="150" y="220" class="subtitle">3. Instruction Execute</text>
    
    <rect x="50" y="235" width="200" height="120" class="execution-box" />
    <text x="150" y="260" class="label">Execute Cycle</text>
    
    <text x="60" y="280" class="pin-label">• Perform the operation</text>
    <text x="60" y="295" class="pin-label">• Access operands if needed</text>
    <text x="60" y="310" class="pin-label">• Update flags and registers</text>
    <text x="60" y="325" class="pin-label">• Store results</text>
    <text x="60" y="340" class="pin-label">• Prepare for next instruction</text>
  </g>
  
  <!-- Memory Access Phase -->
  <g class="memory-phase">
    <text x="450" y="220" class="subtitle">4. Memory Access (if needed)</text>
    
    <rect x="350" y="235" width="200" height="120" class="memory-box" />
    <text x="450" y="260" class="label">Memory Access</text>
    
    <text x="360" y="280" class="pin-label">• Calculate effective address</text>
    <text x="360" y="295" class="pin-label">• Read/Write data memory</text>
    <text x="360" y="310" class="pin-label">• External memory access</text>
    <text x="360" y="325" class="pin-label">• I/O operations</text>
    <text x="360" y="340" class="pin-label">• Stack operations</text>
  </g>
  
  <!-- Flow Arrows -->
  <line x1="250" y1="130" x2="350" y2="130" class="flow-arrow" />
  <line x1="450" y1="190" x2="450" y2="235" class="flow-arrow" />
  <line x1="350" y1="295" x2="250" y2="295" class="flow-arrow" />
  <line x1="150" y1="235" x2="150" y2="190" class="flow-arrow" />
  
  <!-- Cycle Details -->
  <g class="cycle-details">
    <text x="300" y="390" class="subtitle">Instruction Cycle Characteristics</text>
    
    <rect x="50" y="405" width="500" height="80" fill="#f8f8ff" stroke="#483d8b" stroke-width="2" />
    
    <text x="60" y="425" class="pin-label">• One machine cycle = 12 oscillator periods (clock cycles)</text>
    <text x="60" y="440" class="pin-label">• Most instructions execute in 1 or 2 machine cycles</text>
    <text x="60" y="455" class="pin-label">• MUL and DIV instructions take 4 machine cycles</text>
    <text x="60" y="470" class="pin-label">• Clock frequency determines execution speed (e.g., 12 MHz → 1 μs per machine cycle)</text>
  </g>
</svg>
