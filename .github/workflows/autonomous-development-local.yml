name: Autonomous Development (Local Claude)

on:
  # Trigger when issues are created/updated
  issues:
    types: [opened, edited, labeled]
  
  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true
        type: string
      action:
        description: 'Action to perform'
        required: true
        default: 'analyze'
        type: choice
        options:
          - analyze
          - generate-script
          - create-branch

env:
  NODE_VERSION: '20'

jobs:
  prepare-autonomous-task:
    runs-on: ubuntu-latest
    
    outputs:
      issue-data: ${{ steps.issue-analysis.outputs.issue-data }}
      script-content: ${{ steps.script-generator.outputs.script-content }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Analyze GitHub Issue
      id: issue-analysis
      run: |
        # Get issue data
        ISSUE_NUMBER="${{ github.event.issue.number || github.event.inputs.issue_number }}"
        
        # Create issue analysis
        node << 'EOF'
        const fs = require('fs');
        
        const issueData = {
          number: process.env.ISSUE_NUMBER || '${{ github.event.issue.number }}',
          title: '${{ github.event.issue.title }}',
          body: `${{ github.event.issue.body }}`,
          labels: '${{ join(github.event.issue.labels.*.name, ',') }}',
          author: '${{ github.event.issue.user.login }}',
          created_at: '${{ github.event.issue.created_at }}'
        };
        
        // Parse requirements using our MCP server logic
        const requirementText = `${issueData.title}\n\n${issueData.body}`;
        
        // Simple parsing (replaces MCP server for now)
        const analysis = {
          id: `req-${Date.now()}`,
          title: issueData.title,
          description: issueData.body,
          type: requirementText.toLowerCase().includes('bug') ? 'bug' : 'feature',
          priority: requirementText.toLowerCase().includes('urgent') ? 'high' : 'medium',
          complexity: requirementText.length > 500 ? 'complex' : 'medium',
          estimatedHours: requirementText.includes('pdf') ? 4 : 2,
          files: [],
          testRequired: true,
          breakingChange: false
        };
        
        console.log('Issue analysis:', JSON.stringify(analysis, null, 2));
        
        // Save analysis for next steps
        fs.writeFileSync('.github/issue-analysis.json', JSON.stringify(analysis, null, 2));
        
        // Output for GitHub Actions
        const output = JSON.stringify(analysis).replace(/"/g, '\\"');
        console.log(`::set-output name=issue-data::${output}`);
        EOF
        
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number || github.event.inputs.issue_number }}

    - name: Generate Claude Code Script
      id: script-generator
      run: |
        # Create a Claude Code script based on the issue analysis
        cat > .github/autonomous-claude-script.md << 'EOF'
        # Autonomous Development Task
        
        **Issue**: ${{ github.event.issue.title }}
        
        **Description**: 
        ${{ github.event.issue.body }}
        
        ## Action Required
        
        Please analyze this issue and:
        
        1. **Identify the problem**: What exactly needs to be fixed/implemented?
        2. **Find relevant files**: Which files in the codebase are related to this issue?
        3. **Propose solution**: What changes need to be made?
        4. **Create implementation**: Write the actual code changes
        5. **Add tests**: Create appropriate tests for the changes
        6. **Document changes**: Update any necessary documentation
        
        ## Context
        - **Repository**: ${{ github.repository }}
        - **Issue Number**: #${{ github.event.issue.number }}
        - **Branch to create**: autonomous/issue-${{ github.event.issue.number }}
        
        ## Files to Consider
        Based on the issue content, please examine:
        - Any files mentioned in the issue
        - Related configuration files
        - Test files that might need updates
        - Documentation that might need changes
        
        ## Expected Output
        Please provide:
        1. A summary of changes made
        2. List of files modified
        3. Test coverage added
        4. Any breaking changes or considerations
        
        ---
        *This task was generated automatically by the Autonomous Development System*
        EOF
        
        # Create the script content output
        SCRIPT_CONTENT=$(cat .github/autonomous-claude-script.md | base64 -w 0)
        echo "::set-output name=script-content::$SCRIPT_CONTENT"

    - name: Create Autonomous Branch
      run: |
        # Create a branch for autonomous work
        BRANCH_NAME="autonomous/issue-${{ github.event.issue.number || github.event.inputs.issue_number }}"
        git checkout -b "$BRANCH_NAME"
        
        # Add the autonomous task files
        git add .github/issue-analysis.json
        git add .github/autonomous-claude-script.md
        
        # Configure git
        git config user.name "Autonomous Development System"
        git config user.email "autonomous-dev@github.com"
        
        # Commit the preparation
        git commit -m "🤖 Prepare autonomous task for issue #${{ github.event.issue.number }}

        Generated autonomous development task files:
        - Issue analysis and requirements parsing
        - Claude Code script for implementation
        - Branch ready for autonomous development
        
        Next step: Run 'claude code .github/autonomous-claude-script.md' locally"
        
        # Push the branch
        git push origin "$BRANCH_NAME"

    - name: Create Pull Request Template
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "🤖 Autonomous development setup for issue #${{ github.event.issue.number }}"
        title: "🤖 [DRAFT] Autonomous: ${{ github.event.issue.title }}"
        body: |
          ## Autonomous Development Task
          
          This PR was automatically prepared for autonomous development.
          
          **Original Issue**: #${{ github.event.issue.number }}
          **Issue Title**: ${{ github.event.issue.title }}
          
          ### 🤖 Next Steps (Manual)
          
          1. **Checkout this branch locally**:
             ```bash
             git checkout autonomous/issue-${{ github.event.issue.number }}
             ```
          
          2. **Run Claude Code on the generated script**:
             ```bash
             claude code .github/autonomous-claude-script.md
             ```
          
          3. **Claude will autonomously**:
             - Analyze the issue
             - Identify relevant files
             - Implement the solution
             - Add tests
             - Commit changes
          
          4. **Review and merge** the autonomous changes
          
          ### 📋 Autonomous Task Details
          - **Type**: ${{ fromJson(steps.issue-analysis.outputs.issue-data).type }}
          - **Priority**: ${{ fromJson(steps.issue-analysis.outputs.issue-data).priority }}
          - **Estimated Time**: ${{ fromJson(steps.issue-analysis.outputs.issue-data).estimatedHours }} hours
          
          ### ✅ Quality Checks
          - [ ] Code implements the requirements
          - [ ] Tests are added and passing
          - [ ] Documentation is updated
          - [ ] No breaking changes (or properly documented)
          
          ---
          *This PR was generated by the Autonomous Development System*
          
          **To complete**: Run `claude code .github/autonomous-claude-script.md` locally
        branch: autonomous/issue-${{ github.event.issue.number || github.event.inputs.issue_number }}
        delete-branch: false
        draft: true

    - name: Add Issue Comment
      uses: actions/github-script@v7
      with:
        script: |
          const issueNumber = context.issue?.number || ${{ github.event.inputs.issue_number }};
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: `🤖 **Autonomous Development System Activated**
            
            I've automatically prepared this issue for autonomous development:
            
            ### ✅ What I've Done:
            - 📋 Analyzed and parsed the requirements
            - 🌿 Created branch: \`autonomous/issue-${issueNumber}\`
            - 📝 Generated Claude Code script
            - 🔄 Created draft PR for the implementation
            
            ### 🚀 Next Steps:
            1. **Checkout the branch**: \`git checkout autonomous/issue-${issueNumber}\`
            2. **Run Claude Code**: \`claude code .github/autonomous-claude-script.md\`
            3. **Let Claude implement the solution autonomously**
            4. **Review and merge the PR**
            
            The autonomous system is ready! Just run the Claude Code command locally. 🤖✨
            
            ---
            *Powered by [Autonomous Development System](https://github.com/${context.repo.owner}/${context.repo.repo}/tree/master/autonomous-dev-system)*`
          });

    - name: Upload Autonomous Assets
      uses: actions/upload-artifact@v4
      with:
        name: autonomous-task-${{ github.event.issue.number || github.event.inputs.issue_number }}
        path: |
          .github/issue-analysis.json
          .github/autonomous-claude-script.md
        retention-days: 30